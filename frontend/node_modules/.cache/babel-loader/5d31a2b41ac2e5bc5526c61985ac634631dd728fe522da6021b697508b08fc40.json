{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Confidential\\\\Programming\\\\SIH23\\\\frontend\\\\src\\\\components\\\\Dropzone.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// Import the useDropzone hooks from react-dropzone\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropzone = ({\n  onDrop,\n  accept\n}) => {\n  _s();\n  // Initializing useDropzone hooks with options\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept\n  });\n\n  // Define the CSS classes for styling the Dropzone component\n  const dropzoneClasses = `border-dashed border-2 border-gray-300 rounded-md p-4 text-center ${isDragActive ? \"bg-gray-100\" : \"bg-gray-200\"}`;\n\n  /* \r\n    useDropzone hooks exposes two functions called getRootProps and getInputProps\r\n    and also exposes isDragActive boolean\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: dropzoneClasses,\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"hidden\",\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"Release to drop the files here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: [\"Accepted file types: \", accept]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropzone, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n_c = Dropzone;\nexport default Dropzone;\nvar _c;\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"names":["React","useDropzone","jsxDEV","_jsxDEV","Dropzone","onDrop","accept","_s","getRootProps","getInputProps","isDragActive","dropzoneClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Confidential/Programming/SIH23/frontend/src/components/Dropzone.jsx"],"sourcesContent":["\r\nimport React from \"react\";\r\n// Import the useDropzone hooks from react-dropzone\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst Dropzone = ({ onDrop, accept }) => {\r\n  // Initializing useDropzone hooks with options\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept\r\n  });\r\n\r\n\r\n     // Define the CSS classes for styling the Dropzone component\r\n  const dropzoneClasses = `border-dashed border-2 border-gray-300 rounded-md p-4 text-center ${\r\n    isDragActive ? \"bg-gray-100\" : \"bg-gray-200\"\r\n  }`;\r\n\r\n\r\n  /* \r\n    useDropzone hooks exposes two functions called getRootProps and getInputProps\r\n    and also exposes isDragActive boolean\r\n  */\r\n\r\n   return (\r\n    <div className={dropzoneClasses} {...getRootProps()}>\r\n      <input className=\"hidden\" {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p className=\"text-gray-600\">Release to drop the files here</p>\r\n      ) : (\r\n        <div>\r\n          <p className=\"text-gray-600\">\r\n            Drag 'n' drop some files here, or click to select files\r\n          </p>\r\n          <p className=\"text-gray-500\">Accepted file types: {accept}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropzone;"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvC;EACA,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGT,WAAW,CAAC;IAChEI,MAAM;IACNC;EACF,CAAC,CAAC;;EAGC;EACH,MAAMK,eAAe,GAAI,qEACvBD,YAAY,GAAG,aAAa,GAAG,aAChC,EAAC;;EAGF;AACF;AACA;AACA;;EAEG,oBACCP,OAAA;IAAKS,SAAS,EAAED,eAAgB;IAAA,GAAKH,YAAY,CAAC,CAAC;IAAAK,QAAA,gBACjDV,OAAA;MAAOS,SAAS,EAAC,QAAQ;MAAA,GAAKH,aAAa,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChDP,YAAY,gBACXP,OAAA;MAAGS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE/Dd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAGS,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE7B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJd,OAAA;QAAGS,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,uBAAqB,EAACP,MAAM;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CAlCIH,QAAQ;EAAA,QAE0CH,WAAW;AAAA;AAAAiB,EAAA,GAF7Dd,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}